<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="2" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-10-20T12:38:19Z" name="Suite" finished-at="2023-10-20T12:38:50Z" duration-ms="31168">
    <groups>
    </groups>
    <test started-at="2023-10-20T12:38:19Z" name="Testcases" finished-at="2023-10-20T12:38:50Z" duration-ms="31168">
      <class name="testcase.LoginTest">
        <test-method is-config="true" signature="testInit(java.lang.String)[pri:0, instance:testcase.LoginTest@600b90df]" started-at="2023-10-20T12:38:19Z" name="testInit" finished-at="2023-10-20T12:38:30Z" duration-ms="10568" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInit -->
        <test-method signature="launchTestURL()[pri:1, instance:testcase.LoginTest@600b90df]" started-at="2023-10-20T12:38:30Z" name="launchTestURL" description="Verify Launch Test Webpage" finished-at="2023-10-20T12:38:30Z" duration-ms="61" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchTestURL -->
        <test-method is-config="true" signature="testCleanup()[pri:0, instance:testcase.LoginTest@600b90df]" started-at="2023-10-20T12:38:30Z" name="testCleanup" finished-at="2023-10-20T12:38:31Z" duration-ms="753" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCleanup -->
        <test-method is-config="true" signature="testInit(java.lang.String)[pri:0, instance:testcase.LoginTest@600b90df]" started-at="2023-10-20T12:38:31Z" name="testInit" finished-at="2023-10-20T12:38:34Z" duration-ms="3367" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInit -->
        <test-method signature="navigateToHomepage(java.util.Map)[pri:2, instance:testcase.LoginTest@600b90df]" started-at="2023-10-20T12:38:34Z" name="navigateToHomepage" description="Verify Navigate to Home page" data-provider="credentials" finished-at="2023-10-20T12:38:37Z" duration-ms="2746" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{jobTitle=Job Title, postalCode=123456, invalidPassword=testPwd, companyStreet=BUKIT BATOK STREET 33, companyBlockNo=320, offerEmail=offer@email.com, password=bgPB3Aw3SomeOthF@lk!, companyUnit=33, blockNo=Blk123, invalidContactNo=1234, maxBlockNo=Avenue 3,Block 12010, insolvencyRemarks=insolvencyRemarks, companyPostalCode=650320, companyBuildingName=, invalidPostalCode=999, level=L1, investment=10000, companyLevel=03, benefit=benefit, buildingName=Building No, civilRemarks=civilRemarks, unit=unit1, invalidUsername=testuser, otherIncentive=otherIncentive, name=Name, projectDesc=Project Desc, maxLevel=L5000, debarmentRemarks=debarmentRemarks, projTitle=Project Title, remark=Remark, liabilityRemarks=liabilityRemarks, commenceRemarks=commenceRemarks, targetMarket=Target Market, street=street, maxUnit=1234567890, projection=projection, email=test@email.com, alternateEmail=alternate@email.com, offerName=Offer Name, partyRemarks=partyRemarks, fullName=Acceptor, entityId=T15SS0108F, userId=S7145274C, overseaSale=20000, offerJob=Offer Job, userRole=Peter Pan Sing Song, incentiveName=incentiveName, username=temp-others, contactNo=90000876}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToHomepage -->
        <test-method is-config="true" signature="testCleanup()[pri:0, instance:testcase.LoginTest@600b90df]" started-at="2023-10-20T12:38:37Z" name="testCleanup" finished-at="2023-10-20T12:38:37Z" duration-ms="473" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCleanup -->
        <test-method is-config="true" signature="testInit(java.lang.String)[pri:0, instance:testcase.LoginTest@600b90df]" started-at="2023-10-20T12:38:37Z" name="testInit" finished-at="2023-10-20T12:38:41Z" duration-ms="3679" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInit -->
        <test-method signature="signIn_invalidCredentials(java.util.Map)[pri:3, instance:testcase.LoginTest@600b90df]" started-at="2023-10-20T12:38:41Z" name="signIn_invalidCredentials" description="Verify Sign In to home page with invalid credentials" data-provider="credentials" finished-at="2023-10-20T12:38:43Z" duration-ms="2188" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{jobTitle=Job Title, postalCode=123456, invalidPassword=testPwd, companyStreet=BUKIT BATOK STREET 33, companyBlockNo=320, offerEmail=offer@email.com, password=bgPB3Aw3SomeOthF@lk!, companyUnit=33, blockNo=Blk123, invalidContactNo=1234, maxBlockNo=Avenue 3,Block 12010, insolvencyRemarks=insolvencyRemarks, companyPostalCode=650320, companyBuildingName=, invalidPostalCode=999, level=L1, investment=10000, companyLevel=03, benefit=benefit, buildingName=Building No, civilRemarks=civilRemarks, unit=unit1, invalidUsername=testuser, otherIncentive=otherIncentive, name=Name, projectDesc=Project Desc, maxLevel=L5000, debarmentRemarks=debarmentRemarks, projTitle=Project Title, remark=Remark, liabilityRemarks=liabilityRemarks, commenceRemarks=commenceRemarks, targetMarket=Target Market, street=street, maxUnit=1234567890, projection=projection, email=test@email.com, alternateEmail=alternate@email.com, offerName=Offer Name, partyRemarks=partyRemarks, fullName=Acceptor, entityId=T15SS0108F, userId=S7145274C, overseaSale=20000, offerJob=Offer Job, userRole=Peter Pan Sing Song, incentiveName=incentiveName, username=temp-others, contactNo=90000876}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [] but found [The username or password you entered is invalid]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [] but found [The username or password you entered is invalid]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at testcase.LoginTest.signIn_invalidCredentials(LoginTest.java:72)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signIn_invalidCredentials -->
        <test-method is-config="true" signature="testCleanup()[pri:0, instance:testcase.LoginTest@600b90df]" started-at="2023-10-20T12:38:43Z" name="testCleanup" finished-at="2023-10-20T12:38:44Z" duration-ms="474" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCleanup -->
        <test-method is-config="true" signature="testInit(java.lang.String)[pri:0, instance:testcase.LoginTest@600b90df]" started-at="2023-10-20T12:38:44Z" name="testInit" finished-at="2023-10-20T12:38:47Z" duration-ms="3604" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInit -->
        <test-method signature="signIn_validCredentials(java.util.Map)[pri:4, instance:testcase.LoginTest@600b90df]" started-at="2023-10-20T12:38:47Z" name="signIn_validCredentials" description="Verify Sign In to Home page successfully" data-provider="credentials" finished-at="2023-10-20T12:38:49Z" duration-ms="1880" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{jobTitle=Job Title, postalCode=123456, invalidPassword=testPwd, companyStreet=BUKIT BATOK STREET 33, companyBlockNo=320, offerEmail=offer@email.com, password=bgPB3Aw3SomeOthF@lk!, companyUnit=33, blockNo=Blk123, invalidContactNo=1234, maxBlockNo=Avenue 3,Block 12010, insolvencyRemarks=insolvencyRemarks, companyPostalCode=650320, companyBuildingName=, invalidPostalCode=999, level=L1, investment=10000, companyLevel=03, benefit=benefit, buildingName=Building No, civilRemarks=civilRemarks, unit=unit1, invalidUsername=testuser, otherIncentive=otherIncentive, name=Name, projectDesc=Project Desc, maxLevel=L5000, debarmentRemarks=debarmentRemarks, projTitle=Project Title, remark=Remark, liabilityRemarks=liabilityRemarks, commenceRemarks=commenceRemarks, targetMarket=Target Market, street=street, maxUnit=1234567890, projection=projection, email=test@email.com, alternateEmail=alternate@email.com, offerName=Offer Name, partyRemarks=partyRemarks, fullName=Acceptor, entityId=T15SS0108F, userId=S7145274C, overseaSale=20000, offerJob=Offer Job, userRole=Peter Pan Sing Song, incentiveName=incentiveName, username=temp-others, contactNo=90000876}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Signin] but found [Business Grants Portal]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Signin] but found [Business Grants Portal]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at testcase.LoginTest.signIn_validCredentials(LoginTest.java:87)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signIn_validCredentials -->
        <test-method is-config="true" signature="testCleanup()[pri:0, instance:testcase.LoginTest@600b90df]" started-at="2023-10-20T12:38:49Z" name="testCleanup" finished-at="2023-10-20T12:38:50Z" duration-ms="533" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCleanup -->
      </class> <!-- testcase.LoginTest -->
    </test> <!-- Testcases -->
  </suite> <!-- Suite -->
</testng-results>
